/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package tools;

import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics2D;

/**
 *
 * @author Uli Rodriguez
 */
public class MapZtoW extends javax.swing.JFrame {
    TP02_Problem7 problem = new TP02_Problem7();
    
    /**
     * Creates new form MapZtoW
     */
    public MapZtoW() {
        initComponents();
        problem.initZ();
        problem.computeW();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnDraw = new javax.swing.JButton();
        pnlDrawZ = new javax.swing.JPanel();
        pnlDrawW = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnDraw.setText("Draw");
        btnDraw.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDrawActionPerformed(evt);
            }
        });
        getContentPane().add(btnDraw, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 20, 57, -1));

        javax.swing.GroupLayout pnlDrawZLayout = new javax.swing.GroupLayout(pnlDrawZ);
        pnlDrawZ.setLayout(pnlDrawZLayout);
        pnlDrawZLayout.setHorizontalGroup(
            pnlDrawZLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
        pnlDrawZLayout.setVerticalGroup(
            pnlDrawZLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        getContentPane().add(pnlDrawZ, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, 300, 300));

        javax.swing.GroupLayout pnlDrawWLayout = new javax.swing.GroupLayout(pnlDrawW);
        pnlDrawW.setLayout(pnlDrawWLayout);
        pnlDrawWLayout.setHorizontalGroup(
            pnlDrawWLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
        pnlDrawWLayout.setVerticalGroup(
            pnlDrawWLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        getContentPane().add(pnlDrawW, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 90, 300, 300));

        setBounds(0, 0, 654, 517);
    }// </editor-fold>//GEN-END:initComponents

    private void btnDrawActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDrawActionPerformed
        // TODO add your handling code here:

        drawAxis(pnlDrawZ);
        drawAxis(pnlDrawW);
        
        drawZ();
        drawW();
    }//GEN-LAST:event_btnDrawActionPerformed

    private void drawZ(){
        Graphics2D g = (Graphics2D) pnlDrawZ.getGraphics();
        Font sanSerifFont = new Font("SanSerif", Font.PLAIN, 14);
        g.setFont(sanSerifFont);
        for (ComplexNumber c : problem.z) {
            g.drawString("o", 
                    Coordenate.toScreenX(c.getA()), 
                    Coordenate.toScreenX(c.getB()));
            g.setColor(Color.BLACK);
        }
    }

    private void drawW(){
        Graphics2D g = (Graphics2D) pnlDrawW.getGraphics();
        Font sanSerifFont = new Font("SanSerif", Font.PLAIN, 14);
        g.setFont(sanSerifFont);
        for (ComplexNumber c : problem.w) {
            g.drawString("o", 
                    Coordenate.toScreenX(c.getA()), 
                    Coordenate.toScreenX(c.getB()));
            g.setColor(Color.BLACK);
        }
    }
    
    private void drawAxis(javax.swing.JPanel panel) {
        Graphics2D g = (Graphics2D) panel.getGraphics();

        g.setColor(Color.white);
        g.fillRect(0, 0, 400, 400);

        g.setColor(Color.BLACK);
        //g.drawRect(0, 0, 300, 300);

        //x axis from (0,0) to (20,0)
        g.drawLine(Coordenate.toScreenX(Coordenate.XMIN),
                Coordenate.toScreenY(0.0f),
                Coordenate.toScreenX(Coordenate.XMAX),
                Coordenate.toScreenY(0));

        for (float dx = Coordenate.XMIN; dx <= Coordenate.XMAX; dx += 1.0f) {
            g.drawLine(Coordenate.toScreenX(dx),
                    Coordenate.toScreenY(-0.5f),
                    Coordenate.toScreenX(dx),
                    Coordenate.toScreenY(0.5f));
        }

        //y Axis from (0,0) to (0,20)
        g.drawLine(Coordenate.toScreenX(0.05f),
                Coordenate.toScreenY(Coordenate.YMIN),
                Coordenate.toScreenX(0.05f),
                Coordenate.toScreenY(Coordenate.YMAX));

        for (float dy = Coordenate.YMIN; dy <= Coordenate.YMAX; dy += 1.0f) {
            g.drawLine(Coordenate.toScreenX(-0.5f),
                    Coordenate.toScreenY(dy),
                    Coordenate.toScreenX(0.5f),
                    Coordenate.toScreenY(dy));
        }

    }

    private void drawFuntion() {
        //Generate point for y = 0.1 * x^2
        //                  dy = 0.2 * x
        //                  Iy = 0.03333 * x^3
        //Draw points

        int nPoints = 100;
        float dx = Coordenate.XMAX / nPoints;

        float[] x = new float[nPoints];
        float[] y = new float[nPoints];

        float dy[] = new float[nPoints];
        float Iy[] = new float[nPoints];

        for (int i = 0; i < nPoints; i++) {
            x[i] = i * dx;
            y[i] = 0.1f * x[i] * x[i];
            dy[i] = 0.2f * x[i];
            Iy[i] = 0.03333f * x[i] * x[i] * x[i];
        }

        //draw points
        Graphics2D g = (Graphics2D) pnlDrawZ.getGraphics();
        g.setColor(Color.black);

        for (int i = 0; i < nPoints - 1; i++) {
            g.drawLine(Coordenate.toScreenX(x[i]),
                    Coordenate.toScreenY(y[i]),
                    Coordenate.toScreenX(x[i + 1]),
                    Coordenate.toScreenY(y[i + 1]));
        }

        g.setColor(Color.red);
        //draw derivate Points
        for (int i = 0; i < nPoints - 1; i++) {
            g.drawLine(Coordenate.toScreenX(x[i]),
                    Coordenate.toScreenY(dy[i]),
                    Coordenate.toScreenX(x[i + 1]),
                    Coordenate.toScreenY(dy[i + 1]));
        }

        g.setColor(Color.green);
        //draw integral Points
        for (int i = 0; i < nPoints - 1; i++) {
            g.drawLine(Coordenate.toScreenX(x[i]),
                    Coordenate.toScreenY(Iy[i]),
                    Coordenate.toScreenX(x[i + 1]),
                    Coordenate.toScreenY(Iy[i + 1]));
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MapZtoW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MapZtoW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MapZtoW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MapZtoW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MapZtoW().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDraw;
    private javax.swing.JPanel pnlDrawW;
    private javax.swing.JPanel pnlDrawZ;
    // End of variables declaration//GEN-END:variables
}
